{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","components/ThoughtList/index.js","components/FriendList/index.js","utils/mutations.js","utils/queries.js","components/ThoughtForm/index.js","pages/Home.js","pages/Login.js","pages/NoMatch.js","components/ReactionList/index.js","components/ReactionForm/index.js","pages/SingleThought.js","pages/Profile.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","getFullYear","ThoughtList","thoughts","title","length","map","thought","username","style","fontWeight","createdAt","_id","thoughtText","reactionCount","FriendList","friendCount","friends","friend","LOGIN_USER","gql","ADD_USER","ADD_FRIEND","ADD_THOUGHT","ADD_REACTION","QUERY_THOUGHTS","QUERY_THOUGHT","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","ThoughtForm","useState","setText","characterCount","setCharacterCount","handleSubmitForm","addThought","variables","console","error","useMutation","update","cache","data","me","readQuery","query","writeQuery","e","warn","onSubmit","placeholder","value","onChange","target","type","Home","useQuery","loading","userData","Login","props","email","password","formState","setFormState","login","handleChange","name","handleFormSubmit","id","NoMatch","ReactionList","reactions","reaction","reactionBody","ReactionForm","thoughtId","setBody","addReaction","SingleThought","useParams","Profile","userParam","addFriend","user","handleClick","getProfile","Signup","addUser","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA4Ce,M,0FAzCb,WACE,OAAOA,YAAOC,KAAKC,WACpB,G,sBAED,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,EACxC,G,4BAED,SAAeA,GACb,IAEE,OADgBH,YAAOG,GACXE,IAAMC,KAAKC,MAAQ,GAKhC,CAFC,MAAOC,GACP,OAAO,CACR,CACF,G,sBAED,WAEE,OAAOC,aAAaC,QAAQ,WAC7B,G,mBAED,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjCE,OAAOC,SAASC,OAAO,IACxB,G,oBAED,WAEEN,aAAaO,WAAW,YAExBH,OAAOC,SAASC,OAAO,IACxB,K,aCHYE,EAjCA,WAMb,OACE,wBAAQC,UAAU,+CAAlB,SACE,sBAAKA,UAAU,0EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,iDAGF,qBAAKD,UAAU,cAAf,SACGE,EAAKC,WACJ,qCACE,cAAC,IAAD,CAAMF,GAAG,WAAT,gBACA,mBAAGG,KAAK,IAAIC,QAhBT,SAAAC,GACbA,EAAMC,iBACNL,EAAKM,QACN,EAaW,uBAKF,qCACE,cAAC,IAAD,CAAMP,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,6BAOb,ECxBcQ,EAVA,WACb,OACE,wBAAQT,UAAU,iCAAlB,SACE,sBAAKA,UAAU,YAAf,kBACS,IAAIZ,MAAOsB,cADpB,eAKL,EC6BcC,EApCK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC/B,OAAKD,EAASE,OAKZ,gCACE,6BAAKD,IACJD,GACCA,EAASG,KAAI,SAAAC,GAAO,OAClB,sBAAuBhB,UAAU,YAAjC,UACE,oBAAGA,UAAU,cAAb,UACE,cAAC,IAAD,CACEC,GAAE,mBAAce,EAAQC,UACxBC,MAAO,CAAEC,WAAY,KACrBnB,UAAU,aAHZ,SAKGgB,EAAQC,WACH,IAPV,cAQcD,EAAQI,aAEtB,qBAAKpB,UAAU,YAAf,SACE,eAAC,IAAD,CAAMC,GAAE,mBAAce,EAAQK,KAA9B,UACE,4BAAIL,EAAQM,cACZ,oBAAGtB,UAAU,OAAb,wBACcgB,EAAQO,cADtB,eACiD,IAC9CP,EAAQO,cAAgB,MAAQ,QAFnC,6BAdIP,EAAQK,IADA,OAPjB,gDAgCV,ECfcG,EAnBI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaR,EAAwB,EAAxBA,SAAUS,EAAc,EAAdA,QAC3C,OAAKA,GAAYA,EAAQZ,OAKvB,gCACE,+BACGG,EADH,MACgBQ,EADhB,IAC8C,IAAhBA,EAAoB,SAAW,aAE5DC,EAAQX,KAAI,SAAAY,GAAM,OACjB,wBAAQ3B,UAAU,+BAAlB,SACE,cAAC,IAAD,CAAMC,GAAE,mBAAc0B,EAAOV,UAA7B,SAA0CU,EAAOV,YADGU,EAAON,IAD5C,OARd,oBAAGrB,UAAU,yBAAb,UAAuCiB,EAAvC,yBAeV,E,wDClBYW,EAAaC,YAAH,qNAYVC,EAAWD,YAAH,kQAYRE,EAAaF,YAAH,iNAcVG,EAAcH,YAAH,kQAeXI,EAAeJ,YAAH,sTCrDZK,EAAiBL,YAAH,4SAkBdM,EAAgBN,YAAH,sRAkBbO,EAAaP,YAAH,wUAqBVQ,EAAWR,YAAH,kYA2BRS,EAAiBT,YAAH,2KCNZU,EA3EK,WAClB,MAA+BC,mBAAS,IAAxC,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAA4CD,mBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KASMC,EAAgB,iDAAG,WAAMtC,GAAN,kFACvBA,EAAMC,iBADiB,kBAKfsC,EAAW,CACfC,UAAW,CAAExB,iBANM,OAUrBmB,EAAQ,IACRE,EAAkB,GAXG,gDAarBI,QAAQC,MAAR,MAbqB,yDAAH,sDAiBtB,EAAgCC,YAAYjB,EAAa,CACvDkB,OADuD,SAChDC,EADgD,GACd,IAAjBN,EAAgB,EAAxBO,KAAQP,WAEtB,IAEE,IAAQQ,EAAOF,EAAMG,UAAU,CAAEC,MAAOlB,IAAhCgB,GACRF,EAAMK,WAAW,CACfD,MAAOlB,EACPe,KAAM,CAAEC,GAAG,2BAAMA,GAAP,IAAWzC,SAAS,GAAD,mBAAMyC,EAAGzC,UAAT,CAAmBiC,QAInD,CAFC,MAAOY,GACPV,QAAQW,KAAK,mCACd,CAGD,IAAQ9C,EAAauC,EAAMG,UAAU,CAAEC,MAAOrB,IAAtCtB,SACRuC,EAAMK,WAAW,CACfD,MAAOrB,EACPkB,KAAM,CAAExC,SAAS,CAAEiC,GAAH,mBAAkBjC,MAErC,IApBH,mBAAOiC,EAAP,KAAqBG,EAArB,KAAqBA,MAuBrB,OACE,gCACE,oBAAGhD,UAAS,cAA4B,MAAnB0C,GAA0BM,EAAQ,aAAe,IAAtE,8BACoBN,EADpB,OAEGM,GAAS,sBAAMhD,UAAU,OAAhB,wCAEZ,uBACEA,UAAU,iEACV2D,SAAUf,EAFZ,UAIE,0BACEgB,YAAY,0BACZC,MAAOvC,EACPtB,UAAU,6BACV8D,SA7Da,SAAAxD,GACfA,EAAMyD,OAAOF,MAAM/C,QAAU,MAC/B2B,EAAQnC,EAAMyD,OAAOF,OACrBlB,EAAkBrC,EAAMyD,OAAOF,MAAM/C,QAExC,IA0DK,wBAAQd,UAAU,sBAAsBgE,KAAK,SAA7C,yBAMP,E,QC9BcC,EAvCF,WACX,MAA0BC,YAAShC,GAA3BiC,EAAR,EAAQA,QAASf,EAAjB,EAAiBA,KACHgB,EAAaF,YAAS5B,GAA5Bc,KACFxC,GAAe,OAAJwC,QAAI,IAAJA,OAAA,EAAAA,EAAMxC,WAAY,GAE7BT,EAAWD,EAAKC,WAEtB,OACE,+BACE,sBAAKH,UAAU,iCAAf,UACGG,GACC,qBAAKH,UAAU,cAAf,SACE,cAAC,EAAD,MAGJ,qBAAKA,UAAS,sBAAiBG,GAAY,YAA3C,SACGgE,EACC,6CAEA,cAAC,EAAD,CACEvD,SAAUA,EACVC,MAAM,+BAIXV,GAAYiE,EACX,qBAAKpE,UAAU,uBAAf,SACE,cAAC,EAAD,CACEiB,SAAUmD,EAASf,GAAGpC,SACtBQ,YAAa2C,EAASf,GAAG5B,YACzBC,QAAS0C,EAASf,GAAG3B,YAGvB,SAIX,E,SCiCc2C,GAzED,SAACC,GACb,MAAkC9B,mBAAS,CAAE+B,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BzB,YAAYrB,GAAvC,mBAAO+C,EAAP,KAAgB3B,EAAhB,KAAgBA,MAGV4B,EAAe,SAACtE,GACpB,MAAwBA,EAAMyD,OAAtBc,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,MAEda,EAAa,2BACRD,GADO,mBAETI,EAAOhB,IAEX,EAGKiB,EAAgB,iDAAG,WAAOxE,GAAP,0FACvBA,EAAMC,iBADiB,kBAIEoE,EAAM,CAC3B7B,UAAU,eAAM2B,KALG,gBAIbrB,EAJa,EAIbA,KAIRlD,EAAKyE,MAAMvB,EAAKuB,MAAM1F,OARD,gDAUrB8D,QAAQC,MAAR,MAVqB,QAcvB0B,EAAa,CACXH,MAAO,GACPC,SAAU,KAhBW,yDAAH,sDAoBtB,OACE,sBAAMxE,UAAU,+BAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,sBAAKA,UAAU,YAAf,UACE,uBAAM2D,SAAUmB,EAAhB,UACE,uBACE9E,UAAU,aACV4D,YAAY,aACZiB,KAAK,QACLb,KAAK,QACLe,GAAG,QACHlB,MAAOY,EAAUF,MACjBT,SAAUc,IAEZ,uBACE5E,UAAU,aACV4D,YAAY,SACZiB,KAAK,WACLb,KAAK,WACLe,GAAG,WACHlB,MAAOY,EAAUD,SACjBV,SAAUc,IAEZ,wBAAQ5E,UAAU,oBAAoBgE,KAAK,SAA3C,uBAKDhB,GAAS,wDAMrB,ECnEcgC,GARC,WACd,OACE,mEAIH,ECmBcC,GAxBM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtB,OACE,sBAAKlF,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,aAAhB,yBAEF,qBAAKA,UAAU,YAAf,SACGkF,GACCA,EAAUnE,KAAI,SAACoE,GAAD,OACZ,oBAAGnF,UAAU,YAAb,UACGmF,EAASC,aADZ,MAC6B,IAC3B,eAAC,IAAD,CACEnF,GAAE,mBAAckF,EAASlE,UACzBC,MAAO,CAAEC,WAAY,KAFvB,UAIGgE,EAASlE,SAJZ,OAI0BkE,EAAS/D,eANP+D,EAAS9D,IAD3B,QAcvB,ECiCcgE,GAtDM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACtB,EAAgC9C,mBAAS,IAAzC,mBAAO4C,EAAP,KAAqBG,EAArB,KACA,EAA4C/C,mBAAS,GAArD,mBAAOE,EAAP,KAAuBC,EAAvB,KASMmC,EAAgB,iDAAG,WAAMxE,GAAN,kFACvBA,EAAMC,iBADiB,kBAGfiF,EAAY,CAChB1C,UAAW,CAAEsC,eAAcE,eAJR,OAMrBC,EAAQ,IACR5C,EAAkB,GAPG,gDASrBI,QAAQC,MAAR,MATqB,yDAAH,sDAatB,EAAiCC,YAAYhB,GAA7C,mBAAOuD,EAAP,KAAsBxC,EAAtB,KAAsBA,MAGtB,OACE,gCACE,oBACEhD,UAAS,cAA4B,MAAnB0C,GAA0BM,EAAQ,aAAe,IADrE,8BAGoBN,EAHpB,OAIGM,GAAS,sBAAMhD,UAAU,OAAhB,wCAEZ,uBACEA,UAAU,iEACV2D,SAAUmB,EAFZ,UAIE,0BACElB,YAAY,sCACZC,MAAOuB,EACPpF,UAAU,6BACV8D,SAvCa,SAACxD,GAChBA,EAAMyD,OAAOF,MAAM/C,QAAU,MAC/ByE,EAAQjF,EAAMyD,OAAOF,OACrBlB,EAAkBrC,EAAMyD,OAAOF,MAAM/C,QAExC,IAqCK,wBAAQd,UAAU,sBAAsBgE,KAAK,SAA7C,yBAMP,ECVcyB,GAnCO,SAACnB,GACrB,IAAYgB,EAAcI,cAAlBX,GAER,EAA0Bb,YAAS/B,EAAe,CAChDW,UAAW,CAAEiC,GAAIO,KADXnB,EAAR,EAAQA,QAASf,EAAjB,EAAiBA,KAIXpC,GAAc,OAAJoC,QAAI,IAAJA,OAAA,EAAAA,EAAMpC,UAAW,CAAC,EAElC,OAAImD,EACK,6CAIP,gCACE,sBAAKnE,UAAU,YAAf,UACE,oBAAGA,UAAU,cAAb,UACE,sBAAMkB,MAAO,CAAEC,WAAY,KAAOnB,UAAU,aAA5C,SACGgB,EAAQC,WACH,IAHV,cAIcD,EAAQI,aAEtB,qBAAKpB,UAAU,YAAf,SACE,4BAAIgB,EAAQM,mBAIfN,EAAQO,cAAgB,GACvB,cAAC,GAAD,CAAc2D,UAAWlE,EAAQkE,YAElChF,EAAKC,YAAc,cAAC,GAAD,CAAcmF,UAAWtE,EAAQK,QAG1D,ECyCcsE,GAzEC,SAACrB,GACf,IAAkBsB,EAAcF,cAAxBzE,SAER,EAA0BiD,YAAS0B,EAAYxD,EAAaC,EAAU,CACpES,UAAW,CAAE7B,SAAU2E,KADjBzB,EAAR,EAAQA,QAASf,EAAjB,EAAiBA,KAGjB,EAAoBH,YAAYlB,GAAzB8D,EAAP,oBAEMC,GAAW,OAAJ1C,QAAI,IAAJA,OAAA,EAAAA,EAAMC,MAAN,OAAYD,QAAZ,IAAYA,OAAZ,EAAYA,EAAM0C,OAAQ,CAAC,EAElCC,EAAW,iDAAG,iHAEVF,EAAU,CACd/C,UAAW,CAAEiC,GAAIe,EAAKzE,OAHR,sDAMhB0B,QAAQC,MAAR,MANgB,wDAAH,qDAWjB,OAAI9C,EAAKC,YAAcD,EAAK8F,aAAa5C,KAAKnC,WAAa2E,EAClD,cAAC,IAAD,CAAU3F,GAAG,aAGlBkE,EACK,6CAGL,OAAC2B,QAAD,IAACA,KAAM7E,SAUT,gCACE,sBAAKjB,UAAU,gBAAf,UACE,qBAAIA,UAAU,kDAAd,qBACW4F,EAAS,UAAME,EAAK7E,SAAX,MAA0B,OAD9C,eAIC2E,GACC,wBAAQ5F,UAAU,cAAcK,QAAS0F,EAAzC,2BAMJ,sBAAK/F,UAAU,sCAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,CACEY,SAAUkF,EAAKlF,SACfC,MAAK,UAAKiF,EAAK7E,SAAV,sBAIT,qBAAKjB,UAAU,uBAAf,SACE,cAAC,EAAD,CACEiB,SAAU6E,EAAK7E,SACfQ,YAAaqE,EAAKrE,YAClBC,QAASoE,EAAKpE,eAIpB,qBAAK1B,UAAU,MAAf,UAAuB4F,GAAa,cAAC,EAAD,SArCpC,2HAwCL,ECGcK,GAhFA,WACb,MAAkCzD,mBAAS,CACzCvB,SAAU,GACVsD,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,EAA6BzB,YAAYnB,GAAzC,mBAAOoE,EAAP,KAAkBlD,EAAlB,KAAkBA,MAGZ4B,EAAe,SAACtE,GACpB,MAAwBA,EAAMyD,OAAtBc,EAAR,EAAQA,KAAMhB,EAAd,EAAcA,MAEda,EAAa,2BACRD,GADO,mBAETI,EAAOhB,IAEX,EAGKiB,EAAgB,iDAAG,WAAOxE,GAAP,0FACvBA,EAAMC,iBADiB,kBAIE2F,EAAQ,CAC7BpD,UAAU,eAAM2B,KALG,gBAIbrB,EAJa,EAIbA,KAIRlD,EAAKyE,MAAMvB,EAAK8C,QAAQjH,OARH,gDAUrB8D,QAAQC,MAAR,MAVqB,yDAAH,sDActB,OACE,sBAAMhD,UAAU,+BAAhB,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,qBACA,sBAAKA,UAAU,YAAf,UACE,uBAAM2D,SAAUmB,EAAhB,UACE,uBACE9E,UAAU,aACV4D,YAAY,gBACZiB,KAAK,WACLb,KAAK,WACLe,GAAG,WACHlB,MAAOY,EAAUxD,SACjB6C,SAAUc,IAEZ,uBACE5E,UAAU,aACV4D,YAAY,aACZiB,KAAK,QACLb,KAAK,QACLe,GAAG,QACHlB,MAAOY,EAAUF,MACjBT,SAAUc,IAEZ,uBACE5E,UAAU,aACV4D,YAAY,SACZiB,KAAK,WACLb,KAAK,WACLe,GAAG,WACHlB,MAAOY,EAAUD,SACjBV,SAAUc,IAEZ,wBAAQ5E,UAAU,oBAAoBgE,KAAK,SAA3C,uBAKDhB,GAAS,yDAMrB,EChEKmD,GAAWC,YAAe,CAC9BC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BxH,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACLiH,QAAQ,2BACHA,GADE,IAELC,cAAezH,EAAK,iBAAaA,GAAU,KAGhD,IAEK0H,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBhD,MAAO,IAAI4D,MA6BEC,OA1Bf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBN,OAAQA,GAAxB,SACE,cAAC,IAAD,UACE,sBAAK3G,UAAU,4CAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkH,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,MAC/B,eAAC,IAAD,CAAOD,KAAK,WAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,GAAGC,QAAS,cAAC,GAAD,SAE1B,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,GAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,WAG7B,cAAC,EAAD,UAKT,ECnDcC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECJDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,I","file":"static/js/main.f50d8b81.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link to=\"/\">\n          <h1>Deep Thoughts</h1>\n        </Link>\n\n        <nav className=\"text-center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/profile\">Me</Link>\n              <a href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\">Login</Link>\n              <Link to=\"/signup\">Signup</Link>\n            </>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container\">\n        &copy;{new Date().getFullYear()} by Will\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThoughtList = ({ thoughts, title }) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {thoughts &&\n        thoughts.map(thought => (\n          <div key={thought._id} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/profile/${thought.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {thought.username}\n              </Link>{' '}\n              thought on {thought.createdAt}\n            </p>\n            <div className=\"card-body\">\n              <Link to={`/thought/${thought._id}`}>\n                <p>{thought.thoughtText}</p>\n                <p className=\"mb-0\">\n                  Reactions: {thought.reactionCount} || Click to{' '}\n                  {thought.reactionCount ? 'see' : 'start'} the discussion!\n                </p>\n              </Link>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendList = ({ friendCount, username, friends }) => {\n  if (!friends || !friends.length) {\n    return <p className=\"bg-dark text-light p-3\">{username}, make some friends!</p>;\n  }\n\n  return (\n    <div>\n      <h5>\n        {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\n      </h5>\n      {friends.map(friend => (\n        <button className=\"btn w-100 display-block mb-2\" key={friend._id}>\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FriendList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`\n\nexport const ADD_REACTION = gql`\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;","import { gql } from '@apollo/client';\n\nexport const QUERY_THOUGHTS = gql`\n  query thoughts($username: String) {\n    thoughts(username: $username) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHT = gql`\n  query thought($id: ID!) {\n    thought(_id: $id) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n        reactionCount\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n        reactionCount\n        reactions {\n          _id\n          createdAt\n          reactionBody\n          username\n        }\n      }\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import React, { useState} from 'react'\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_ME, QUERY_THOUGHTS } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length)\n    }\n  }\n\n  const handleSubmitForm = async event => {\n    event.preventDefault();\n\n    try {\n      // add thought to database\n      await addThought({\n        variables: { thoughtText }\n      });\n\n      //clear form values\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n\n      try {\n        // update me array's cache\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n        });\n      } catch (e) {\n        console.warn(\"First thought insertion by user!\");\n      }\n\n      // update thought array's cache\n      const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n      cache.writeQuery({\n        query: QUERY_THOUGHTS,\n        data: { thoughts: [addThought, ...thoughts] },\n      });\n    },\n  });\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}>\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form \n        className='flex-row justify-center justify-space-between-md align-stretch'\n        onSubmit={handleSubmitForm}\n      >\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          value={thoughtText}\n          className='form-input col-12 col-md-9'\n          onChange={handleChange}\n        ></textarea>\n        <button className='btn col-12 col-md-3' type='submit'>\n          Submit\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ThoughtForm","import React from \"react\";\nimport ThoughtList from \"../components/ThoughtList\";\nimport FriendList from \"../components/FriendList\";\nimport ThoughtForm from \"../components/ThoughtForm\";\n\nimport Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_THOUGHTS, QUERY_ME_BASIC } from \"../utils/queries\";\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const { data: userData } = useQuery(QUERY_ME_BASIC);\n  const thoughts = data?.thoughts || [];\n\n  const loggedIn = Auth.loggedIn();\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        {loggedIn && (\n          <div className=\"col-12 mb-3\">\n            <ThoughtForm />\n          </div>\n        )}\n        <div className={`col-12 mb-3 ${loggedIn && \"col-lg-8\"}`}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Food for Thought...\"\n            />\n          )}\n        </div>\n        {loggedIn && userData ? (\n          <div className=\"col-12 col-lg-3 mb-3\">\n            <FriendList\n              username={userData.me.username}\n              friendCount={userData.me.friendCount}\n              friends={userData.me.friends}\n            />\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Login failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ReactionList = ({ reactions }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">Reactions</span>\n      </div>\n      <div className=\"card-body\">\n        {reactions &&\n          reactions.map((reaction) => (\n            <p className=\"pill mb-3\" key={reaction._id}>\n              {reaction.reactionBody} //{\" \"}\n              <Link\n                to={`/profile/${reaction.username}`}\n                style={{ fontWeight: 700 }}\n              >\n                {reaction.username} on {reaction.createdAt}\n              </Link>\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReactionList;\n","import { useMutation } from '@apollo/client';\nimport React, { useState } from 'react'\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({ thoughtId }) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0)\n\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try{\n      await addReaction({\n        variables: { reactionBody, thoughtId }\n      })\n      setBody('');\n      setCharacterCount(0)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  const [addReaction, { error }] = useMutation(ADD_REACTION)\n\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? \"text-error\" : \"\"}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a reaction to this thought...\"\n          value={reactionBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ReactionForm","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReactionList from '../components/ReactionList';\nimport ReactionForm from '../components/ReactionForm';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHT } from '../utils/queries';\nimport Auth from '../utils/auth';\n\n\nconst SingleThought = (props) => {\n  const { id: thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\n    variables: { id: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {thought.username}\n          </span>{' '}\n          thought on {thought.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{thought.thoughtText}</p>\n        </div>\n      </div>\n\n      {thought.reactionCount > 0 && (\n        <ReactionList reactions={thought.reactions} />\n      )}\n      {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\n\nimport ThoughtList from '../components/ThoughtList';\nimport FriendList from '../components/FriendList';\nimport ThoughtForm from '../components/ThoughtForm';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport { ADD_FRIEND } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Profile = (props) => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n  const [addFriend] = useMutation(ADD_FRIEND);\n\n  const user = data?.me || data?.user || {};\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: user._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : \"your\"} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Friend\n          </button>\n        )}\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <ThoughtList\n            thoughts={user.thoughts}\n            title={`${user.username}'s thoughts...`}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n      <div className='mb3'>{!userParam && <ThoughtForm />}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\">\n                <Route path=\":username\" element={<Profile />} />\n                <Route path=\"\" element={<Profile />} />\n              </Route>\n              <Route path=\"/thought/:id\" element={<SingleThought />} />\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}